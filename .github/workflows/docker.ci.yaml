name: Build and Push Docker Image to Amazon ECR

on:
    push:
      branches:
          - main

    workflow_dispatch:      
  
jobs:
  Build-and-Push:

    name: Build & Push Docker Image
    runs-on: ubuntu-latest  
    
    steps:  
        - name: Checkout
          uses: actions/checkout@v2    
          
        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{secrets.AWS_REGION}}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build and push Docker image to Amazon ECR
          id: build-image
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: |
              ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ github.sha }}
              ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:latest
            platforms: linux/amd64
            provenance: false
    
        - name: Download task definition
          run: |
            aws ecs describe-task-definition --task-definition ${{ vars.TASK_DEF }} --query taskDefinition > task-definition.json

        - name: Fill in the new image ID in the Amazon ECS task definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
              task-definition: task-definition.json
              container-name: ${{ vars.CONTAINER_NAME }}
              image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ github.sha }}
      
        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
             task-definition: ${{ steps.task-def.outputs.task-definition }}
             service: ${{ vars.ECS_SERVICE }}
             cluster: ${{ vars.ECS_CLUSTER }}
             wait-for-service-stability: true
